name : CI/CD pipeline for ecommerce app
on : 
  push : 
    branches : [main]
jobs: 
  build_deploy : 
    runs-on : ubuntu-latest 
    steps : 
      - name : Setup Repo 
        uses : actions/checkout@v4 
      - name : Build the war file
        run : sh build.sh
      - name : install aws 
        run : | 
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          sudo apt install unzip 
          sudo unzip awscliv2.zip
          sudo ./aws/install --update
      - name : configure aws credientials 
        uses : aws-actions/configure-aws-credentials@v4
        with : 
          aws-access-key-id : ${{secrets.AWS_ACCESS_KEY_ID}} 
          aws-secret-access-key : ${{secrets.AWS_ACCESS_KEY}} 
          aws-region : ${{secrets.AWS_REGION}} 
      - name : install docker 
        run : | 
           curl -fsSL https://get.docker.com -o get-docker.sh 
           sh get-docker.sh
      - name : install kubernetes
        run : | 
           curl -LO https://dl.k8s.io/release/v1.32.0/bin/linux/amd64/kubectl
           sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
           sudo chmod +x /usr/local/bin/kubectl
      - name : config kubernetes cluster
        run : | 
            mkdir -p $HOME/.kube
            aws eks update-kubeconfig --name ${{secrets.AWS_CLUSTER_NAME}} --region ${{secrets.AWS_REGION}}
            export KUBECONFIG=/etc/kubernetes/admin.conf
      - name : authenticate with ecr 
        id : login-ecr 
        uses : aws-actions/amazon-ecr-login@v2
      - name : build image 
        run : | 
          export CURRENT=$(kubectl get deployments webapp -o jsonpath="{..image}")
          export NEXT=$((CURRENT+1))
          docker build -t ${{secrets.DOCKER_REGISTRY}}/ecommerce-web-app:$NEXT . 
          docker push ${{secrets.DOCKER_REGISTRY}}/ecommerce-web-app:$NEXT
      - name : create secrets
        run : | 
          cat > secret.env << EOF
          MYSQL_ROOT_PASSWORD="${{secrets.MYSQL_ROOT_PASSWORD}}"
          MYSQL_DATABASE="${{secrets.MYSQL_DATABASE}}"
          MYSQL_USER="${{secrets.MYSQL_USER}}"
          MYSQL_PASSWORD="${{secrets.MYSQL_PASSWORD}}"
          MYSQL_HOST="${{secrets.MYSQL_HOST}}"
          MYSQL_PORT="${{secrets.MYSQL_PORT}}"
          S3_ACCESS_KEY="${{secrets.S3_ACCESS_KEY}}"
          S3_SECRET_KEY="${{secrets.S3_SECRET_KEY}}"
          S3_BUCKET_NAME="${{secrets.S3_BUCKET_NAME}}"
          MAIL_FROM="${{secrets.MAIL_FROM}}"
          MAIL_SMTP_SERVER="${{secrets.MAIL_SMTP_SERVER}}"
          MAIL_PASSWORD="${{secrets.MAIL_PASSWORD}}"
          ADMIN_EMAIL="${{secrets.ADMIN_EMAIL}}"
          ADMIN_NOM="${{secrets.ADMIN_NOM}}"
          ADMIN_PASSWORD="${{secrets.ADMIN_PASSWORD}}"
          EOF 

          kubectl create secret generic secret_env_file --from-env-file=secret.env
      - name : rerun kubecluster 
        run : | 
          kubectl set image deployments/webapp web-app-container=${{secrets.DOCKER_REGISTRY}}/ecommerce-web-app:$NEXT
          kubectl get svc 
          kubectl get pods
          
